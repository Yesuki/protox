# Generated by protox. DO NOT EDIT!
# source: primitive_values.proto
import typing

import protox


class PrimitiveValues(protox.Message):
    i32: int
    u32: int
    i64: int
    u64: int
    si32: int
    si64: int
    fi32: int
    fi64: int
    sfi32: int
    sfi64: int
    f32: float
    f64: float
    s: str
    b: bytes
    boolean: bool

    def __init__(
        self,
        *,
        i32: int = None,
        u32: int = None,
        i64: int = None,
        u64: int = None,
        si32: int = None,
        si64: int = None,
        fi32: int = None,
        fi64: int = None,
        sfi32: int = None,
        sfi64: int = None,
        f32: float = None,
        f64: float = None,
        s: str = None,
        b: bytes = None,
        boolean: bool = None,
    ):
        super().__init__(
            i32=i32,
            u32=u32,
            i64=i64,
            u64=u64,
            si32=si32,
            si64=si64,
            fi32=fi32,
            fi64=fi64,
            sfi32=sfi32,
            sfi64=sfi64,
            f32=f32,
            f64=f64,
            s=s,
            b=b,
            boolean=boolean,
        )


class OptionalPrimitiveValues(protox.Message):
    i32: typing.Optional[int]
    u32: typing.Optional[int]
    i64: typing.Optional[int]
    u64: typing.Optional[int]
    si32: typing.Optional[int]
    si64: typing.Optional[int]
    fi32: typing.Optional[int]
    fi64: typing.Optional[int]
    sfi32: typing.Optional[int]
    sfi64: typing.Optional[int]
    f32: typing.Optional[float]
    f64: typing.Optional[float]
    s: typing.Optional[str]
    b: typing.Optional[bytes]
    boolean: typing.Optional[bool]

    def __init__(
        self,
        *,
        i32: typing.Optional[int] = None,
        u32: typing.Optional[int] = None,
        i64: typing.Optional[int] = None,
        u64: typing.Optional[int] = None,
        si32: typing.Optional[int] = None,
        si64: typing.Optional[int] = None,
        fi32: typing.Optional[int] = None,
        fi64: typing.Optional[int] = None,
        sfi32: typing.Optional[int] = None,
        sfi64: typing.Optional[int] = None,
        f32: typing.Optional[float] = None,
        f64: typing.Optional[float] = None,
        s: typing.Optional[str] = None,
        b: typing.Optional[bytes] = None,
        boolean: typing.Optional[bool] = None,
    ):
        super().__init__(
            i32=i32,
            u32=u32,
            i64=i64,
            u64=u64,
            si32=si32,
            si64=si64,
            fi32=fi32,
            fi64=fi64,
            sfi32=sfi32,
            sfi64=sfi64,
            f32=f32,
            f64=f64,
            s=s,
            b=b,
            boolean=boolean,
        )


class OptionalDefaultPrimitiveValues(protox.Message):
    i32: typing.Optional[int]
    u32: typing.Optional[int]
    i64: typing.Optional[int]
    u64: typing.Optional[int]
    si32: typing.Optional[int]
    si64: typing.Optional[int]
    fi32: typing.Optional[int]
    fi64: typing.Optional[int]
    sfi32: typing.Optional[int]
    sfi64: typing.Optional[int]
    f32: typing.Optional[float]
    f64: typing.Optional[float]
    s: typing.Optional[str]
    b: typing.Optional[bytes]
    boolean: typing.Optional[bool]

    def __init__(
        self,
        *,
        i32: typing.Optional[int] = None,
        u32: typing.Optional[int] = None,
        i64: typing.Optional[int] = None,
        u64: typing.Optional[int] = None,
        si32: typing.Optional[int] = None,
        si64: typing.Optional[int] = None,
        fi32: typing.Optional[int] = None,
        fi64: typing.Optional[int] = None,
        sfi32: typing.Optional[int] = None,
        sfi64: typing.Optional[int] = None,
        f32: typing.Optional[float] = None,
        f64: typing.Optional[float] = None,
        s: typing.Optional[str] = None,
        b: typing.Optional[bytes] = None,
        boolean: typing.Optional[bool] = None,
    ):
        super().__init__(
            i32=i32,
            u32=u32,
            i64=i64,
            u64=u64,
            si32=si32,
            si64=si64,
            fi32=fi32,
            fi64=fi64,
            sfi32=sfi32,
            sfi64=sfi64,
            f32=f32,
            f64=f64,
            s=s,
            b=b,
            boolean=boolean,
        )


class RepeatedPrimitiveValues(protox.Message):
    i32: typing.List[int]
    u32: typing.List[int]
    i64: typing.List[int]
    u64: typing.List[int]
    si32: typing.List[int]
    si64: typing.List[int]
    fi32: typing.List[int]
    fi64: typing.List[int]
    sfi32: typing.List[int]
    sfi64: typing.List[int]
    f32: typing.List[float]
    f64: typing.List[float]
    s: typing.List[str]
    b: typing.List[bytes]
    boolean: typing.List[bool]

    def __init__(
        self,
        *,
        i32: typing.List[int] = None,
        u32: typing.List[int] = None,
        i64: typing.List[int] = None,
        u64: typing.List[int] = None,
        si32: typing.List[int] = None,
        si64: typing.List[int] = None,
        fi32: typing.List[int] = None,
        fi64: typing.List[int] = None,
        sfi32: typing.List[int] = None,
        sfi64: typing.List[int] = None,
        f32: typing.List[float] = None,
        f64: typing.List[float] = None,
        s: typing.List[str] = None,
        b: typing.List[bytes] = None,
        boolean: typing.List[bool] = None,
    ):
        super().__init__(
            i32=i32,
            u32=u32,
            i64=i64,
            u64=u64,
            si32=si32,
            si64=si64,
            fi32=fi32,
            fi64=fi64,
            sfi32=sfi32,
            sfi64=sfi64,
            f32=f32,
            f64=f64,
            s=s,
            b=b,
            boolean=boolean,
        )


class RepeatedPackedPrimitiveValues(protox.Message):
    i32: typing.List[int]
    u32: typing.List[int]
    i64: typing.List[int]
    u64: typing.List[int]
    si32: typing.List[int]
    si64: typing.List[int]
    fi32: typing.List[int]
    fi64: typing.List[int]
    sfi32: typing.List[int]
    sfi64: typing.List[int]
    f32: typing.List[float]
    f64: typing.List[float]
    boolean: typing.List[bool]

    def __init__(
        self,
        *,
        i32: typing.List[int] = None,
        u32: typing.List[int] = None,
        i64: typing.List[int] = None,
        u64: typing.List[int] = None,
        si32: typing.List[int] = None,
        si64: typing.List[int] = None,
        fi32: typing.List[int] = None,
        fi64: typing.List[int] = None,
        sfi32: typing.List[int] = None,
        sfi64: typing.List[int] = None,
        f32: typing.List[float] = None,
        f64: typing.List[float] = None,
        boolean: typing.List[bool] = None,
    ):
        super().__init__(
            i32=i32,
            u32=u32,
            i64=i64,
            u64=u64,
            si32=si32,
            si64=si64,
            fi32=fi32,
            fi64=fi64,
            sfi32=sfi32,
            sfi64=sfi64,
            f32=f32,
            f64=f64,
            boolean=boolean,
        )


FILE_DESCRIPTOR = protox.FileDescriptorProto.from_bytes(b'\n\x16primitive_values.proto"\xaf\x02\n\x0fPrimitiveValues\x12\x10\n\x03i32\x18\x01 \x02(\x05R\x03i32\x12\x10\n\x03u32\x18\x02 \x02(\rR\x03u32\x12\x10\n\x03i64\x18\x03 \x02(\x03R\x03i64\x12\x10\n\x03u64\x18\x04 \x02(\x04R\x03u64\x12\x12\n\x04si32\x18\x05 \x02(\x11R\x04si32\x12\x12\n\x04si64\x18\x06 \x02(\x12R\x04si64\x12\x12\n\x04fi32\x18\x07 \x02(\x07R\x04fi32\x12\x12\n\x04fi64\x18\x08 \x02(\x06R\x04fi64\x12\x14\n\x05sfi32\x18\t \x02(\x0fR\x05sfi32\x12\x14\n\x05sfi64\x18\n \x02(\x10R\x05sfi64\x12\x10\n\x03f32\x18\x0b \x02(\x02R\x03f32\x12\x10\n\x03f64\x18\x0c \x02(\x01R\x03f64\x12\x0c\n\x01s\x18\r \x02(\tR\x01s\x12\x0c\n\x01b\x18\x0e \x02(\x0cR\x01b\x12\x18\n\x07boolean\x18\x0f \x02(\x08R\x07boolean"\xb7\x02\n\x17OptionalPrimitiveValues\x12\x10\n\x03i32\x18\x01 \x01(\x05R\x03i32\x12\x10\n\x03u32\x18\x02 \x01(\rR\x03u32\x12\x10\n\x03i64\x18\x03 \x01(\x03R\x03i64\x12\x10\n\x03u64\x18\x04 \x01(\x04R\x03u64\x12\x12\n\x04si32\x18\x05 \x01(\x11R\x04si32\x12\x12\n\x04si64\x18\x06 \x01(\x12R\x04si64\x12\x12\n\x04fi32\x18\x07 \x01(\x07R\x04fi32\x12\x12\n\x04fi64\x18\x08 \x01(\x06R\x04fi64\x12\x14\n\x05sfi32\x18\t \x01(\x0fR\x05sfi32\x12\x14\n\x05sfi64\x18\n \x01(\x10R\x05sfi64\x12\x10\n\x03f32\x18\x0b \x01(\x02R\x03f32\x12\x10\n\x03f64\x18\x0c \x01(\x01R\x03f64\x12\x0c\n\x01s\x18\r \x01(\tR\x01s\x12\x0c\n\x01b\x18\x0e \x01(\x0cR\x01b\x12\x18\n\x07boolean\x18\x0f \x01(\x08R\x07boolean"\xed\x02\n\x1eOptionalDefaultPrimitiveValues\x12\x13\n\x03i32\x18\x01 \x01(\x05:\x010R\x03i32\x12\x13\n\x03u32\x18\x02 \x01(\r:\x010R\x03u32\x12\x13\n\x03i64\x18\x03 \x01(\x03:\x010R\x03i64\x12\x13\n\x03u64\x18\x04 \x01(\x04:\x010R\x03u64\x12\x15\n\x04si32\x18\x05 \x01(\x11:\x010R\x04si32\x12\x15\n\x04si64\x18\x06 \x01(\x12:\x010R\x04si64\x12\x15\n\x04fi32\x18\x07 \x01(\x07:\x010R\x04fi32\x12\x15\n\x04fi64\x18\x08 \x01(\x06:\x010R\x04fi64\x12\x17\n\x05sfi32\x18\t \x01(\x0f:\x010R\x05sfi32\x12\x17\n\x05sfi64\x18\n \x01(\x10:\x010R\x05sfi64\x12\x13\n\x03f32\x18\x0b \x01(\x02:\x010R\x03f32\x12\x13\n\x03f64\x18\x0c \x01(\x01:\x010R\x03f64\x12\x0e\n\x01s\x18\r \x01(\t:\x00R\x01s\x12\x0e\n\x01b\x18\x0e \x01(\x0c:\x00R\x01b\x12\x1f\n\x07boolean\x18\x0f \x01(\x08:\x05falseR\x07boolean"\xb7\x02\n\x17RepeatedPrimitiveValues\x12\x10\n\x03i32\x18\x01 \x03(\x05R\x03i32\x12\x10\n\x03u32\x18\x02 \x03(\rR\x03u32\x12\x10\n\x03i64\x18\x03 \x03(\x03R\x03i64\x12\x10\n\x03u64\x18\x04 \x03(\x04R\x03u64\x12\x12\n\x04si32\x18\x05 \x03(\x11R\x04si32\x12\x12\n\x04si64\x18\x06 \x03(\x12R\x04si64\x12\x12\n\x04fi32\x18\x07 \x03(\x07R\x04fi32\x12\x12\n\x04fi64\x18\x08 \x03(\x06R\x04fi64\x12\x14\n\x05sfi32\x18\t \x03(\x0fR\x05sfi32\x12\x14\n\x05sfi64\x18\n \x03(\x10R\x05sfi64\x12\x10\n\x03f32\x18\x0b \x03(\x02R\x03f32\x12\x10\n\x03f64\x18\x0c \x03(\x01R\x03f64\x12\x0c\n\x01s\x18\r \x03(\tR\x01s\x12\x0c\n\x01b\x18\x0e \x03(\x0cR\x01b\x12\x18\n\x07boolean\x18\x0f \x03(\x08R\x07boolean"\xd7\x03\n\x1dRepeatedPackedPrimitiveValues\x12\x1e\n\x03i32\x18\x01 \x03(\x05R\x03i32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12\x1e\n\x03u32\x18\x02 \x03(\rR\x03u32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12\x1e\n\x03i64\x18\x03 \x03(\x03R\x03i64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12\x1e\n\x03u64\x18\x04 \x03(\x04R\x03u64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12 \n\x04si32\x18\x05 \x03(\x11R\x04si32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12 \n\x04si64\x18\x06 \x03(\x12R\x04si64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12 \n\x04fi32\x18\x07 \x03(\x07R\x04fi32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12 \n\x04fi64\x18\x08 \x03(\x06R\x04fi64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12"\n\x05sfi32\x18\t \x03(\x0fR\x05sfi32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12"\n\x05sfi64\x18\n \x03(\x10R\x05sfi64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12\x1e\n\x03f32\x18\x0b \x03(\x02R\x03f32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12\x1e\n\x03f64\x18\x0c \x03(\x01R\x03f64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12&\n\x07boolean\x18\r \x03(\x08R\x07booleanB\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00J\xd4.\n\x06\x12\x04\x00\x00{\x01\n\x08\n\x01\x0c\x12\x03\x00\x00\x12\n\n\n\x02\x04\x00\x12\x04\x02\x00\x19\x01\n\n\n\x03\x04\x00\x01\x12\x03\x02\x08\x17\n\x0b\n\x04\x04\x00\x02\x00\x12\x03\x03\x04\x1b\n\x0c\n\x05\x04\x00\x02\x00\x04\x12\x03\x03\x04\x0c\n\x0c\n\x05\x04\x00\x02\x00\x05\x12\x03\x03\r\x12\n\x0c\n\x05\x04\x00\x02\x00\x01\x12\x03\x03\x13\x16\n\x0c\n\x05\x04\x00\x02\x00\x03\x12\x03\x03\x19\x1a\n\x0b\n\x04\x04\x00\x02\x01\x12\x03\x04\x04\x1c\n\x0c\n\x05\x04\x00\x02\x01\x04\x12\x03\x04\x04\x0c\n\x0c\n\x05\x04\x00\x02\x01\x05\x12\x03\x04\r\x13\n\x0c\n\x05\x04\x00\x02\x01\x01\x12\x03\x04\x14\x17\n\x0c\n\x05\x04\x00\x02\x01\x03\x12\x03\x04\x1a\x1b\n\x0b\n\x04\x04\x00\x02\x02\x12\x03\x06\x04\x1b\n\x0c\n\x05\x04\x00\x02\x02\x04\x12\x03\x06\x04\x0c\n\x0c\n\x05\x04\x00\x02\x02\x05\x12\x03\x06\r\x12\n\x0c\n\x05\x04\x00\x02\x02\x01\x12\x03\x06\x13\x16\n\x0c\n\x05\x04\x00\x02\x02\x03\x12\x03\x06\x19\x1a\n\x0b\n\x04\x04\x00\x02\x03\x12\x03\x07\x04\x1c\n\x0c\n\x05\x04\x00\x02\x03\x04\x12\x03\x07\x04\x0c\n\x0c\n\x05\x04\x00\x02\x03\x05\x12\x03\x07\r\x13\n\x0c\n\x05\x04\x00\x02\x03\x01\x12\x03\x07\x14\x17\n\x0c\n\x05\x04\x00\x02\x03\x03\x12\x03\x07\x1a\x1b\n\x0b\n\x04\x04\x00\x02\x04\x12\x03\t\x04\x1d\n\x0c\n\x05\x04\x00\x02\x04\x04\x12\x03\t\x04\x0c\n\x0c\n\x05\x04\x00\x02\x04\x05\x12\x03\t\r\x13\n\x0c\n\x05\x04\x00\x02\x04\x01\x12\x03\t\x14\x18\n\x0c\n\x05\x04\x00\x02\x04\x03\x12\x03\t\x1b\x1c\n\x0b\n\x04\x04\x00\x02\x05\x12\x03\n\x04\x1d\n\x0c\n\x05\x04\x00\x02\x05\x04\x12\x03\n\x04\x0c\n\x0c\n\x05\x04\x00\x02\x05\x05\x12\x03\n\r\x13\n\x0c\n\x05\x04\x00\x02\x05\x01\x12\x03\n\x14\x18\n\x0c\n\x05\x04\x00\x02\x05\x03\x12\x03\n\x1b\x1c\n\x0b\n\x04\x04\x00\x02\x06\x12\x03\x0c\x04\x1e\n\x0c\n\x05\x04\x00\x02\x06\x04\x12\x03\x0c\x04\x0c\n\x0c\n\x05\x04\x00\x02\x06\x05\x12\x03\x0c\r\x14\n\x0c\n\x05\x04\x00\x02\x06\x01\x12\x03\x0c\x15\x19\n\x0c\n\x05\x04\x00\x02\x06\x03\x12\x03\x0c\x1c\x1d\n\x0b\n\x04\x04\x00\x02\x07\x12\x03\r\x04\x1e\n\x0c\n\x05\x04\x00\x02\x07\x04\x12\x03\r\x04\x0c\n\x0c\n\x05\x04\x00\x02\x07\x05\x12\x03\r\r\x14\n\x0c\n\x05\x04\x00\x02\x07\x01\x12\x03\r\x15\x19\n\x0c\n\x05\x04\x00\x02\x07\x03\x12\x03\r\x1c\x1d\n\x0b\n\x04\x04\x00\x02\x08\x12\x03\x0f\x04 \n\x0c\n\x05\x04\x00\x02\x08\x04\x12\x03\x0f\x04\x0c\n\x0c\n\x05\x04\x00\x02\x08\x05\x12\x03\x0f\r\x15\n\x0c\n\x05\x04\x00\x02\x08\x01\x12\x03\x0f\x16\x1b\n\x0c\n\x05\x04\x00\x02\x08\x03\x12\x03\x0f\x1e\x1f\n\x0b\n\x04\x04\x00\x02\t\x12\x03\x10\x04!\n\x0c\n\x05\x04\x00\x02\t\x04\x12\x03\x10\x04\x0c\n\x0c\n\x05\x04\x00\x02\t\x05\x12\x03\x10\r\x15\n\x0c\n\x05\x04\x00\x02\t\x01\x12\x03\x10\x16\x1b\n\x0c\n\x05\x04\x00\x02\t\x03\x12\x03\x10\x1e \n\x0b\n\x04\x04\x00\x02\n\x12\x03\x12\x04\x1c\n\x0c\n\x05\x04\x00\x02\n\x04\x12\x03\x12\x04\x0c\n\x0c\n\x05\x04\x00\x02\n\x05\x12\x03\x12\r\x12\n\x0c\n\x05\x04\x00\x02\n\x01\x12\x03\x12\x13\x16\n\x0c\n\x05\x04\x00\x02\n\x03\x12\x03\x12\x19\x1b\n\x0b\n\x04\x04\x00\x02\x0b\x12\x03\x13\x04\x1d\n\x0c\n\x05\x04\x00\x02\x0b\x04\x12\x03\x13\x04\x0c\n\x0c\n\x05\x04\x00\x02\x0b\x05\x12\x03\x13\r\x13\n\x0c\n\x05\x04\x00\x02\x0b\x01\x12\x03\x13\x14\x17\n\x0c\n\x05\x04\x00\x02\x0b\x03\x12\x03\x13\x1a\x1c\n\x0b\n\x04\x04\x00\x02\x0c\x12\x03\x15\x04\x1b\n\x0c\n\x05\x04\x00\x02\x0c\x04\x12\x03\x15\x04\x0c\n\x0c\n\x05\x04\x00\x02\x0c\x05\x12\x03\x15\r\x13\n\x0c\n\x05\x04\x00\x02\x0c\x01\x12\x03\x15\x14\x15\n\x0c\n\x05\x04\x00\x02\x0c\x03\x12\x03\x15\x18\x1a\n\x0b\n\x04\x04\x00\x02\r\x12\x03\x16\x04\x1a\n\x0c\n\x05\x04\x00\x02\r\x04\x12\x03\x16\x04\x0c\n\x0c\n\x05\x04\x00\x02\r\x05\x12\x03\x16\r\x12\n\x0c\n\x05\x04\x00\x02\r\x01\x12\x03\x16\x13\x14\n\x0c\n\x05\x04\x00\x02\r\x03\x12\x03\x16\x17\x19\n\x0b\n\x04\x04\x00\x02\x0e\x12\x03\x18\x04\x1f\n\x0c\n\x05\x04\x00\x02\x0e\x04\x12\x03\x18\x04\x0c\n\x0c\n\x05\x04\x00\x02\x0e\x05\x12\x03\x18\r\x11\n\x0c\n\x05\x04\x00\x02\x0e\x01\x12\x03\x18\x12\x19\n\x0c\n\x05\x04\x00\x02\x0e\x03\x12\x03\x18\x1c\x1e\n\n\n\x02\x04\x01\x12\x04\x1b\x002\x01\n\n\n\x03\x04\x01\x01\x12\x03\x1b\x08\x1f\n\x0b\n\x04\x04\x01\x02\x00\x12\x03\x1c\x04\x1b\n\x0c\n\x05\x04\x01\x02\x00\x04\x12\x03\x1c\x04\x0c\n\x0c\n\x05\x04\x01\x02\x00\x05\x12\x03\x1c\r\x12\n\x0c\n\x05\x04\x01\x02\x00\x01\x12\x03\x1c\x13\x16\n\x0c\n\x05\x04\x01\x02\x00\x03\x12\x03\x1c\x19\x1a\n\x0b\n\x04\x04\x01\x02\x01\x12\x03\x1d\x04\x1c\n\x0c\n\x05\x04\x01\x02\x01\x04\x12\x03\x1d\x04\x0c\n\x0c\n\x05\x04\x01\x02\x01\x05\x12\x03\x1d\r\x13\n\x0c\n\x05\x04\x01\x02\x01\x01\x12\x03\x1d\x14\x17\n\x0c\n\x05\x04\x01\x02\x01\x03\x12\x03\x1d\x1a\x1b\n\x0b\n\x04\x04\x01\x02\x02\x12\x03\x1f\x04\x1b\n\x0c\n\x05\x04\x01\x02\x02\x04\x12\x03\x1f\x04\x0c\n\x0c\n\x05\x04\x01\x02\x02\x05\x12\x03\x1f\r\x12\n\x0c\n\x05\x04\x01\x02\x02\x01\x12\x03\x1f\x13\x16\n\x0c\n\x05\x04\x01\x02\x02\x03\x12\x03\x1f\x19\x1a\n\x0b\n\x04\x04\x01\x02\x03\x12\x03 \x04\x1c\n\x0c\n\x05\x04\x01\x02\x03\x04\x12\x03 \x04\x0c\n\x0c\n\x05\x04\x01\x02\x03\x05\x12\x03 \r\x13\n\x0c\n\x05\x04\x01\x02\x03\x01\x12\x03 \x14\x17\n\x0c\n\x05\x04\x01\x02\x03\x03\x12\x03 \x1a\x1b\n\x0b\n\x04\x04\x01\x02\x04\x12\x03"\x04\x1d\n\x0c\n\x05\x04\x01\x02\x04\x04\x12\x03"\x04\x0c\n\x0c\n\x05\x04\x01\x02\x04\x05\x12\x03"\r\x13\n\x0c\n\x05\x04\x01\x02\x04\x01\x12\x03"\x14\x18\n\x0c\n\x05\x04\x01\x02\x04\x03\x12\x03"\x1b\x1c\n\x0b\n\x04\x04\x01\x02\x05\x12\x03#\x04\x1d\n\x0c\n\x05\x04\x01\x02\x05\x04\x12\x03#\x04\x0c\n\x0c\n\x05\x04\x01\x02\x05\x05\x12\x03#\r\x13\n\x0c\n\x05\x04\x01\x02\x05\x01\x12\x03#\x14\x18\n\x0c\n\x05\x04\x01\x02\x05\x03\x12\x03#\x1b\x1c\n\x0b\n\x04\x04\x01\x02\x06\x12\x03%\x04\x1e\n\x0c\n\x05\x04\x01\x02\x06\x04\x12\x03%\x04\x0c\n\x0c\n\x05\x04\x01\x02\x06\x05\x12\x03%\r\x14\n\x0c\n\x05\x04\x01\x02\x06\x01\x12\x03%\x15\x19\n\x0c\n\x05\x04\x01\x02\x06\x03\x12\x03%\x1c\x1d\n\x0b\n\x04\x04\x01\x02\x07\x12\x03&\x04\x1e\n\x0c\n\x05\x04\x01\x02\x07\x04\x12\x03&\x04\x0c\n\x0c\n\x05\x04\x01\x02\x07\x05\x12\x03&\r\x14\n\x0c\n\x05\x04\x01\x02\x07\x01\x12\x03&\x15\x19\n\x0c\n\x05\x04\x01\x02\x07\x03\x12\x03&\x1c\x1d\n\x0b\n\x04\x04\x01\x02\x08\x12\x03(\x04 \n\x0c\n\x05\x04\x01\x02\x08\x04\x12\x03(\x04\x0c\n\x0c\n\x05\x04\x01\x02\x08\x05\x12\x03(\r\x15\n\x0c\n\x05\x04\x01\x02\x08\x01\x12\x03(\x16\x1b\n\x0c\n\x05\x04\x01\x02\x08\x03\x12\x03(\x1e\x1f\n\x0b\n\x04\x04\x01\x02\t\x12\x03)\x04!\n\x0c\n\x05\x04\x01\x02\t\x04\x12\x03)\x04\x0c\n\x0c\n\x05\x04\x01\x02\t\x05\x12\x03)\r\x15\n\x0c\n\x05\x04\x01\x02\t\x01\x12\x03)\x16\x1b\n\x0c\n\x05\x04\x01\x02\t\x03\x12\x03)\x1e \n\x0b\n\x04\x04\x01\x02\n\x12\x03+\x04\x1c\n\x0c\n\x05\x04\x01\x02\n\x04\x12\x03+\x04\x0c\n\x0c\n\x05\x04\x01\x02\n\x05\x12\x03+\r\x12\n\x0c\n\x05\x04\x01\x02\n\x01\x12\x03+\x13\x16\n\x0c\n\x05\x04\x01\x02\n\x03\x12\x03+\x19\x1b\n\x0b\n\x04\x04\x01\x02\x0b\x12\x03,\x04\x1d\n\x0c\n\x05\x04\x01\x02\x0b\x04\x12\x03,\x04\x0c\n\x0c\n\x05\x04\x01\x02\x0b\x05\x12\x03,\r\x13\n\x0c\n\x05\x04\x01\x02\x0b\x01\x12\x03,\x14\x17\n\x0c\n\x05\x04\x01\x02\x0b\x03\x12\x03,\x1a\x1c\n\x0b\n\x04\x04\x01\x02\x0c\x12\x03.\x04\x1b\n\x0c\n\x05\x04\x01\x02\x0c\x04\x12\x03.\x04\x0c\n\x0c\n\x05\x04\x01\x02\x0c\x05\x12\x03.\r\x13\n\x0c\n\x05\x04\x01\x02\x0c\x01\x12\x03.\x14\x15\n\x0c\n\x05\x04\x01\x02\x0c\x03\x12\x03.\x18\x1a\n\x0b\n\x04\x04\x01\x02\r\x12\x03/\x04\x1a\n\x0c\n\x05\x04\x01\x02\r\x04\x12\x03/\x04\x0c\n\x0c\n\x05\x04\x01\x02\r\x05\x12\x03/\r\x12\n\x0c\n\x05\x04\x01\x02\r\x01\x12\x03/\x13\x14\n\x0c\n\x05\x04\x01\x02\r\x03\x12\x03/\x17\x19\n\x0b\n\x04\x04\x01\x02\x0e\x12\x031\x04\x1f\n\x0c\n\x05\x04\x01\x02\x0e\x04\x12\x031\x04\x0c\n\x0c\n\x05\x04\x01\x02\x0e\x05\x12\x031\r\x11\n\x0c\n\x05\x04\x01\x02\x0e\x01\x12\x031\x12\x19\n\x0c\n\x05\x04\x01\x02\x0e\x03\x12\x031\x1c\x1e\n\n\n\x02\x04\x02\x12\x044\x00K\x01\n\n\n\x03\x04\x02\x01\x12\x034\x08&\n\x0b\n\x04\x04\x02\x02\x00\x12\x035\x04)\n\x0c\n\x05\x04\x02\x02\x00\x04\x12\x035\x04\x0c\n\x0c\n\x05\x04\x02\x02\x00\x05\x12\x035\r\x12\n\x0c\n\x05\x04\x02\x02\x00\x01\x12\x035\x13\x16\n\x0c\n\x05\x04\x02\x02\x00\x03\x12\x035\x19\x1a\n\x0c\n\x05\x04\x02\x02\x00\x08\x12\x035\x1b(\n\x0c\n\x05\x04\x02\x02\x00\x07\x12\x035&\'\n\x0b\n\x04\x04\x02\x02\x01\x12\x036\x04*\n\x0c\n\x05\x04\x02\x02\x01\x04\x12\x036\x04\x0c\n\x0c\n\x05\x04\x02\x02\x01\x05\x12\x036\r\x13\n\x0c\n\x05\x04\x02\x02\x01\x01\x12\x036\x14\x17\n\x0c\n\x05\x04\x02\x02\x01\x03\x12\x036\x1a\x1b\n\x0c\n\x05\x04\x02\x02\x01\x08\x12\x036\x1c)\n\x0c\n\x05\x04\x02\x02\x01\x07\x12\x036\'(\n\x0b\n\x04\x04\x02\x02\x02\x12\x038\x04)\n\x0c\n\x05\x04\x02\x02\x02\x04\x12\x038\x04\x0c\n\x0c\n\x05\x04\x02\x02\x02\x05\x12\x038\r\x12\n\x0c\n\x05\x04\x02\x02\x02\x01\x12\x038\x13\x16\n\x0c\n\x05\x04\x02\x02\x02\x03\x12\x038\x19\x1a\n\x0c\n\x05\x04\x02\x02\x02\x08\x12\x038\x1b(\n\x0c\n\x05\x04\x02\x02\x02\x07\x12\x038&\'\n\x0b\n\x04\x04\x02\x02\x03\x12\x039\x04*\n\x0c\n\x05\x04\x02\x02\x03\x04\x12\x039\x04\x0c\n\x0c\n\x05\x04\x02\x02\x03\x05\x12\x039\r\x13\n\x0c\n\x05\x04\x02\x02\x03\x01\x12\x039\x14\x17\n\x0c\n\x05\x04\x02\x02\x03\x03\x12\x039\x1a\x1b\n\x0c\n\x05\x04\x02\x02\x03\x08\x12\x039\x1c)\n\x0c\n\x05\x04\x02\x02\x03\x07\x12\x039\'(\n\x0b\n\x04\x04\x02\x02\x04\x12\x03;\x04+\n\x0c\n\x05\x04\x02\x02\x04\x04\x12\x03;\x04\x0c\n\x0c\n\x05\x04\x02\x02\x04\x05\x12\x03;\r\x13\n\x0c\n\x05\x04\x02\x02\x04\x01\x12\x03;\x14\x18\n\x0c\n\x05\x04\x02\x02\x04\x03\x12\x03;\x1b\x1c\n\x0c\n\x05\x04\x02\x02\x04\x08\x12\x03;\x1d*\n\x0c\n\x05\x04\x02\x02\x04\x07\x12\x03;()\n\x0b\n\x04\x04\x02\x02\x05\x12\x03<\x04+\n\x0c\n\x05\x04\x02\x02\x05\x04\x12\x03<\x04\x0c\n\x0c\n\x05\x04\x02\x02\x05\x05\x12\x03<\r\x13\n\x0c\n\x05\x04\x02\x02\x05\x01\x12\x03<\x14\x18\n\x0c\n\x05\x04\x02\x02\x05\x03\x12\x03<\x1b\x1c\n\x0c\n\x05\x04\x02\x02\x05\x08\x12\x03<\x1d*\n\x0c\n\x05\x04\x02\x02\x05\x07\x12\x03<()\n\x0b\n\x04\x04\x02\x02\x06\x12\x03>\x04,\n\x0c\n\x05\x04\x02\x02\x06\x04\x12\x03>\x04\x0c\n\x0c\n\x05\x04\x02\x02\x06\x05\x12\x03>\r\x14\n\x0c\n\x05\x04\x02\x02\x06\x01\x12\x03>\x15\x19\n\x0c\n\x05\x04\x02\x02\x06\x03\x12\x03>\x1c\x1d\n\x0c\n\x05\x04\x02\x02\x06\x08\x12\x03>\x1e+\n\x0c\n\x05\x04\x02\x02\x06\x07\x12\x03>)*\n\x0b\n\x04\x04\x02\x02\x07\x12\x03?\x04,\n\x0c\n\x05\x04\x02\x02\x07\x04\x12\x03?\x04\x0c\n\x0c\n\x05\x04\x02\x02\x07\x05\x12\x03?\r\x14\n\x0c\n\x05\x04\x02\x02\x07\x01\x12\x03?\x15\x19\n\x0c\n\x05\x04\x02\x02\x07\x03\x12\x03?\x1c\x1d\n\x0c\n\x05\x04\x02\x02\x07\x08\x12\x03?\x1e+\n\x0c\n\x05\x04\x02\x02\x07\x07\x12\x03?)*\n\x0b\n\x04\x04\x02\x02\x08\x12\x03A\x04.\n\x0c\n\x05\x04\x02\x02\x08\x04\x12\x03A\x04\x0c\n\x0c\n\x05\x04\x02\x02\x08\x05\x12\x03A\r\x15\n\x0c\n\x05\x04\x02\x02\x08\x01\x12\x03A\x16\x1b\n\x0c\n\x05\x04\x02\x02\x08\x03\x12\x03A\x1e\x1f\n\x0c\n\x05\x04\x02\x02\x08\x08\x12\x03A -\n\x0c\n\x05\x04\x02\x02\x08\x07\x12\x03A+,\n\x0b\n\x04\x04\x02\x02\t\x12\x03B\x04/\n\x0c\n\x05\x04\x02\x02\t\x04\x12\x03B\x04\x0c\n\x0c\n\x05\x04\x02\x02\t\x05\x12\x03B\r\x15\n\x0c\n\x05\x04\x02\x02\t\x01\x12\x03B\x16\x1b\n\x0c\n\x05\x04\x02\x02\t\x03\x12\x03B\x1e \n\x0c\n\x05\x04\x02\x02\t\x08\x12\x03B!.\n\x0c\n\x05\x04\x02\x02\t\x07\x12\x03B,-\n\x0b\n\x04\x04\x02\x02\n\x12\x03D\x04,\n\x0c\n\x05\x04\x02\x02\n\x04\x12\x03D\x04\x0c\n\x0c\n\x05\x04\x02\x02\n\x05\x12\x03D\r\x12\n\x0c\n\x05\x04\x02\x02\n\x01\x12\x03D\x13\x16\n\x0c\n\x05\x04\x02\x02\n\x03\x12\x03D\x19\x1b\n\x0c\n\x05\x04\x02\x02\n\x08\x12\x03D\x1c+\n\x0c\n\x05\x04\x02\x02\n\x07\x12\x03D\'*\n\x0b\n\x04\x04\x02\x02\x0b\x12\x03E\x04-\n\x0c\n\x05\x04\x02\x02\x0b\x04\x12\x03E\x04\x0c\n\x0c\n\x05\x04\x02\x02\x0b\x05\x12\x03E\r\x13\n\x0c\n\x05\x04\x02\x02\x0b\x01\x12\x03E\x14\x17\n\x0c\n\x05\x04\x02\x02\x0b\x03\x12\x03E\x1a\x1c\n\x0c\n\x05\x04\x02\x02\x0b\x08\x12\x03E\x1d,\n\x0c\n\x05\x04\x02\x02\x0b\x07\x12\x03E(+\n\x0b\n\x04\x04\x02\x02\x0c\x12\x03G\x04*\n\x0c\n\x05\x04\x02\x02\x0c\x04\x12\x03G\x04\x0c\n\x0c\n\x05\x04\x02\x02\x0c\x05\x12\x03G\r\x13\n\x0c\n\x05\x04\x02\x02\x0c\x01\x12\x03G\x14\x15\n\x0c\n\x05\x04\x02\x02\x0c\x03\x12\x03G\x18\x1a\n\x0c\n\x05\x04\x02\x02\x0c\x08\x12\x03G\x1b)\n\x0c\n\x05\x04\x02\x02\x0c\x07\x12\x03G&(\n\x0b\n\x04\x04\x02\x02\r\x12\x03H\x04)\n\x0c\n\x05\x04\x02\x02\r\x04\x12\x03H\x04\x0c\n\x0c\n\x05\x04\x02\x02\r\x05\x12\x03H\r\x12\n\x0c\n\x05\x04\x02\x02\r\x01\x12\x03H\x13\x14\n\x0c\n\x05\x04\x02\x02\r\x03\x12\x03H\x17\x19\n\x0c\n\x05\x04\x02\x02\r\x08\x12\x03H\x1a(\n\x0c\n\x05\x04\x02\x02\r\x07\x12\x03H%\'\n\x0b\n\x04\x04\x02\x02\x0e\x12\x03J\x041\n\x0c\n\x05\x04\x02\x02\x0e\x04\x12\x03J\x04\x0c\n\x0c\n\x05\x04\x02\x02\x0e\x05\x12\x03J\r\x11\n\x0c\n\x05\x04\x02\x02\x0e\x01\x12\x03J\x12\x19\n\x0c\n\x05\x04\x02\x02\x0e\x03\x12\x03J\x1c\x1e\n\x0c\n\x05\x04\x02\x02\x0e\x08\x12\x03J\x1f0\n\x0c\n\x05\x04\x02\x02\x0e\x07\x12\x03J*/\n\n\n\x02\x04\x03\x12\x04N\x00e\x01\n\n\n\x03\x04\x03\x01\x12\x03N\x08\x1f\n\x0b\n\x04\x04\x03\x02\x00\x12\x03O\x04\x1b\n\x0c\n\x05\x04\x03\x02\x00\x04\x12\x03O\x04\x0c\n\x0c\n\x05\x04\x03\x02\x00\x05\x12\x03O\r\x12\n\x0c\n\x05\x04\x03\x02\x00\x01\x12\x03O\x13\x16\n\x0c\n\x05\x04\x03\x02\x00\x03\x12\x03O\x19\x1a\n\x0b\n\x04\x04\x03\x02\x01\x12\x03P\x04\x1c\n\x0c\n\x05\x04\x03\x02\x01\x04\x12\x03P\x04\x0c\n\x0c\n\x05\x04\x03\x02\x01\x05\x12\x03P\r\x13\n\x0c\n\x05\x04\x03\x02\x01\x01\x12\x03P\x14\x17\n\x0c\n\x05\x04\x03\x02\x01\x03\x12\x03P\x1a\x1b\n\x0b\n\x04\x04\x03\x02\x02\x12\x03R\x04\x1b\n\x0c\n\x05\x04\x03\x02\x02\x04\x12\x03R\x04\x0c\n\x0c\n\x05\x04\x03\x02\x02\x05\x12\x03R\r\x12\n\x0c\n\x05\x04\x03\x02\x02\x01\x12\x03R\x13\x16\n\x0c\n\x05\x04\x03\x02\x02\x03\x12\x03R\x19\x1a\n\x0b\n\x04\x04\x03\x02\x03\x12\x03S\x04\x1c\n\x0c\n\x05\x04\x03\x02\x03\x04\x12\x03S\x04\x0c\n\x0c\n\x05\x04\x03\x02\x03\x05\x12\x03S\r\x13\n\x0c\n\x05\x04\x03\x02\x03\x01\x12\x03S\x14\x17\n\x0c\n\x05\x04\x03\x02\x03\x03\x12\x03S\x1a\x1b\n\x0b\n\x04\x04\x03\x02\x04\x12\x03U\x04\x1d\n\x0c\n\x05\x04\x03\x02\x04\x04\x12\x03U\x04\x0c\n\x0c\n\x05\x04\x03\x02\x04\x05\x12\x03U\r\x13\n\x0c\n\x05\x04\x03\x02\x04\x01\x12\x03U\x14\x18\n\x0c\n\x05\x04\x03\x02\x04\x03\x12\x03U\x1b\x1c\n\x0b\n\x04\x04\x03\x02\x05\x12\x03V\x04\x1d\n\x0c\n\x05\x04\x03\x02\x05\x04\x12\x03V\x04\x0c\n\x0c\n\x05\x04\x03\x02\x05\x05\x12\x03V\r\x13\n\x0c\n\x05\x04\x03\x02\x05\x01\x12\x03V\x14\x18\n\x0c\n\x05\x04\x03\x02\x05\x03\x12\x03V\x1b\x1c\n\x0b\n\x04\x04\x03\x02\x06\x12\x03X\x04\x1e\n\x0c\n\x05\x04\x03\x02\x06\x04\x12\x03X\x04\x0c\n\x0c\n\x05\x04\x03\x02\x06\x05\x12\x03X\r\x14\n\x0c\n\x05\x04\x03\x02\x06\x01\x12\x03X\x15\x19\n\x0c\n\x05\x04\x03\x02\x06\x03\x12\x03X\x1c\x1d\n\x0b\n\x04\x04\x03\x02\x07\x12\x03Y\x04\x1e\n\x0c\n\x05\x04\x03\x02\x07\x04\x12\x03Y\x04\x0c\n\x0c\n\x05\x04\x03\x02\x07\x05\x12\x03Y\r\x14\n\x0c\n\x05\x04\x03\x02\x07\x01\x12\x03Y\x15\x19\n\x0c\n\x05\x04\x03\x02\x07\x03\x12\x03Y\x1c\x1d\n\x0b\n\x04\x04\x03\x02\x08\x12\x03[\x04 \n\x0c\n\x05\x04\x03\x02\x08\x04\x12\x03[\x04\x0c\n\x0c\n\x05\x04\x03\x02\x08\x05\x12\x03[\r\x15\n\x0c\n\x05\x04\x03\x02\x08\x01\x12\x03[\x16\x1b\n\x0c\n\x05\x04\x03\x02\x08\x03\x12\x03[\x1e\x1f\n\x0b\n\x04\x04\x03\x02\t\x12\x03\\\x04!\n\x0c\n\x05\x04\x03\x02\t\x04\x12\x03\\\x04\x0c\n\x0c\n\x05\x04\x03\x02\t\x05\x12\x03\\\r\x15\n\x0c\n\x05\x04\x03\x02\t\x01\x12\x03\\\x16\x1b\n\x0c\n\x05\x04\x03\x02\t\x03\x12\x03\\\x1e \n\x0b\n\x04\x04\x03\x02\n\x12\x03^\x04\x1c\n\x0c\n\x05\x04\x03\x02\n\x04\x12\x03^\x04\x0c\n\x0c\n\x05\x04\x03\x02\n\x05\x12\x03^\r\x12\n\x0c\n\x05\x04\x03\x02\n\x01\x12\x03^\x13\x16\n\x0c\n\x05\x04\x03\x02\n\x03\x12\x03^\x19\x1b\n\x0b\n\x04\x04\x03\x02\x0b\x12\x03_\x04\x1d\n\x0c\n\x05\x04\x03\x02\x0b\x04\x12\x03_\x04\x0c\n\x0c\n\x05\x04\x03\x02\x0b\x05\x12\x03_\r\x13\n\x0c\n\x05\x04\x03\x02\x0b\x01\x12\x03_\x14\x17\n\x0c\n\x05\x04\x03\x02\x0b\x03\x12\x03_\x1a\x1c\n\x0b\n\x04\x04\x03\x02\x0c\x12\x03a\x04\x1b\n\x0c\n\x05\x04\x03\x02\x0c\x04\x12\x03a\x04\x0c\n\x0c\n\x05\x04\x03\x02\x0c\x05\x12\x03a\r\x13\n\x0c\n\x05\x04\x03\x02\x0c\x01\x12\x03a\x14\x15\n\x0c\n\x05\x04\x03\x02\x0c\x03\x12\x03a\x18\x1a\n\x0b\n\x04\x04\x03\x02\r\x12\x03b\x04\x1a\n\x0c\n\x05\x04\x03\x02\r\x04\x12\x03b\x04\x0c\n\x0c\n\x05\x04\x03\x02\r\x05\x12\x03b\r\x12\n\x0c\n\x05\x04\x03\x02\r\x01\x12\x03b\x13\x14\n\x0c\n\x05\x04\x03\x02\r\x03\x12\x03b\x17\x19\n\x0b\n\x04\x04\x03\x02\x0e\x12\x03d\x04\x1f\n\x0c\n\x05\x04\x03\x02\x0e\x04\x12\x03d\x04\x0c\n\x0c\n\x05\x04\x03\x02\x0e\x05\x12\x03d\r\x11\n\x0c\n\x05\x04\x03\x02\x0e\x01\x12\x03d\x12\x19\n\x0c\n\x05\x04\x03\x02\x0e\x03\x12\x03d\x1c\x1e\n\n\n\x02\x04\x04\x12\x04g\x00{\x01\n\n\n\x03\x04\x04\x01\x12\x03g\x08%\n\x0b\n\x04\x04\x04\x02\x00\x12\x03h\x04)\n\x0c\n\x05\x04\x04\x02\x00\x04\x12\x03h\x04\x0c\n\x0c\n\x05\x04\x04\x02\x00\x05\x12\x03h\r\x12\n\x0c\n\x05\x04\x04\x02\x00\x01\x12\x03h\x13\x16\n\x0c\n\x05\x04\x04\x02\x00\x03\x12\x03h\x19\x1a\n\x0c\n\x05\x04\x04\x02\x00\x08\x12\x03h\x1b(\n\r\n\x06\x04\x04\x02\x00\x08\x02\x12\x03h\x1c\'\n\x0b\n\x04\x04\x04\x02\x01\x12\x03i\x04*\n\x0c\n\x05\x04\x04\x02\x01\x04\x12\x03i\x04\x0c\n\x0c\n\x05\x04\x04\x02\x01\x05\x12\x03i\r\x13\n\x0c\n\x05\x04\x04\x02\x01\x01\x12\x03i\x14\x17\n\x0c\n\x05\x04\x04\x02\x01\x03\x12\x03i\x1a\x1b\n\x0c\n\x05\x04\x04\x02\x01\x08\x12\x03i\x1c)\n\r\n\x06\x04\x04\x02\x01\x08\x02\x12\x03i\x1d(\n\x0b\n\x04\x04\x04\x02\x02\x12\x03k\x04)\n\x0c\n\x05\x04\x04\x02\x02\x04\x12\x03k\x04\x0c\n\x0c\n\x05\x04\x04\x02\x02\x05\x12\x03k\r\x12\n\x0c\n\x05\x04\x04\x02\x02\x01\x12\x03k\x13\x16\n\x0c\n\x05\x04\x04\x02\x02\x03\x12\x03k\x19\x1a\n\x0c\n\x05\x04\x04\x02\x02\x08\x12\x03k\x1b(\n\r\n\x06\x04\x04\x02\x02\x08\x02\x12\x03k\x1c\'\n\x0b\n\x04\x04\x04\x02\x03\x12\x03l\x04*\n\x0c\n\x05\x04\x04\x02\x03\x04\x12\x03l\x04\x0c\n\x0c\n\x05\x04\x04\x02\x03\x05\x12\x03l\r\x13\n\x0c\n\x05\x04\x04\x02\x03\x01\x12\x03l\x14\x17\n\x0c\n\x05\x04\x04\x02\x03\x03\x12\x03l\x1a\x1b\n\x0c\n\x05\x04\x04\x02\x03\x08\x12\x03l\x1c)\n\r\n\x06\x04\x04\x02\x03\x08\x02\x12\x03l\x1d(\n\x0b\n\x04\x04\x04\x02\x04\x12\x03n\x04+\n\x0c\n\x05\x04\x04\x02\x04\x04\x12\x03n\x04\x0c\n\x0c\n\x05\x04\x04\x02\x04\x05\x12\x03n\r\x13\n\x0c\n\x05\x04\x04\x02\x04\x01\x12\x03n\x14\x18\n\x0c\n\x05\x04\x04\x02\x04\x03\x12\x03n\x1b\x1c\n\x0c\n\x05\x04\x04\x02\x04\x08\x12\x03n\x1d*\n\r\n\x06\x04\x04\x02\x04\x08\x02\x12\x03n\x1e)\n\x0b\n\x04\x04\x04\x02\x05\x12\x03o\x04+\n\x0c\n\x05\x04\x04\x02\x05\x04\x12\x03o\x04\x0c\n\x0c\n\x05\x04\x04\x02\x05\x05\x12\x03o\r\x13\n\x0c\n\x05\x04\x04\x02\x05\x01\x12\x03o\x14\x18\n\x0c\n\x05\x04\x04\x02\x05\x03\x12\x03o\x1b\x1c\n\x0c\n\x05\x04\x04\x02\x05\x08\x12\x03o\x1d*\n\r\n\x06\x04\x04\x02\x05\x08\x02\x12\x03o\x1e)\n\x0b\n\x04\x04\x04\x02\x06\x12\x03q\x04,\n\x0c\n\x05\x04\x04\x02\x06\x04\x12\x03q\x04\x0c\n\x0c\n\x05\x04\x04\x02\x06\x05\x12\x03q\r\x14\n\x0c\n\x05\x04\x04\x02\x06\x01\x12\x03q\x15\x19\n\x0c\n\x05\x04\x04\x02\x06\x03\x12\x03q\x1c\x1d\n\x0c\n\x05\x04\x04\x02\x06\x08\x12\x03q\x1e+\n\r\n\x06\x04\x04\x02\x06\x08\x02\x12\x03q\x1f*\n\x0b\n\x04\x04\x04\x02\x07\x12\x03r\x04,\n\x0c\n\x05\x04\x04\x02\x07\x04\x12\x03r\x04\x0c\n\x0c\n\x05\x04\x04\x02\x07\x05\x12\x03r\r\x14\n\x0c\n\x05\x04\x04\x02\x07\x01\x12\x03r\x15\x19\n\x0c\n\x05\x04\x04\x02\x07\x03\x12\x03r\x1c\x1d\n\x0c\n\x05\x04\x04\x02\x07\x08\x12\x03r\x1e+\n\r\n\x06\x04\x04\x02\x07\x08\x02\x12\x03r\x1f*\n\x0b\n\x04\x04\x04\x02\x08\x12\x03t\x04.\n\x0c\n\x05\x04\x04\x02\x08\x04\x12\x03t\x04\x0c\n\x0c\n\x05\x04\x04\x02\x08\x05\x12\x03t\r\x15\n\x0c\n\x05\x04\x04\x02\x08\x01\x12\x03t\x16\x1b\n\x0c\n\x05\x04\x04\x02\x08\x03\x12\x03t\x1e\x1f\n\x0c\n\x05\x04\x04\x02\x08\x08\x12\x03t -\n\r\n\x06\x04\x04\x02\x08\x08\x02\x12\x03t!,\n\x0b\n\x04\x04\x04\x02\t\x12\x03u\x04/\n\x0c\n\x05\x04\x04\x02\t\x04\x12\x03u\x04\x0c\n\x0c\n\x05\x04\x04\x02\t\x05\x12\x03u\r\x15\n\x0c\n\x05\x04\x04\x02\t\x01\x12\x03u\x16\x1b\n\x0c\n\x05\x04\x04\x02\t\x03\x12\x03u\x1e \n\x0c\n\x05\x04\x04\x02\t\x08\x12\x03u!.\n\r\n\x06\x04\x04\x02\t\x08\x02\x12\x03u"-\n\x0b\n\x04\x04\x04\x02\n\x12\x03w\x04*\n\x0c\n\x05\x04\x04\x02\n\x04\x12\x03w\x04\x0c\n\x0c\n\x05\x04\x04\x02\n\x05\x12\x03w\r\x12\n\x0c\n\x05\x04\x04\x02\n\x01\x12\x03w\x13\x16\n\x0c\n\x05\x04\x04\x02\n\x03\x12\x03w\x19\x1b\n\x0c\n\x05\x04\x04\x02\n\x08\x12\x03w\x1c)\n\r\n\x06\x04\x04\x02\n\x08\x02\x12\x03w\x1d(\n\x0b\n\x04\x04\x04\x02\x0b\x12\x03x\x04+\n\x0c\n\x05\x04\x04\x02\x0b\x04\x12\x03x\x04\x0c\n\x0c\n\x05\x04\x04\x02\x0b\x05\x12\x03x\r\x13\n\x0c\n\x05\x04\x04\x02\x0b\x01\x12\x03x\x14\x17\n\x0c\n\x05\x04\x04\x02\x0b\x03\x12\x03x\x1a\x1c\n\x0c\n\x05\x04\x04\x02\x0b\x08\x12\x03x\x1d*\n\r\n\x06\x04\x04\x02\x0b\x08\x02\x12\x03x\x1e)\n\x0b\n\x04\x04\x04\x02\x0c\x12\x03z\x04-\n\x0c\n\x05\x04\x04\x02\x0c\x04\x12\x03z\x04\x0c\n\x0c\n\x05\x04\x04\x02\x0c\x05\x12\x03z\r\x11\n\x0c\n\x05\x04\x04\x02\x0c\x01\x12\x03z\x12\x19\n\x0c\n\x05\x04\x04\x02\x0c\x03\x12\x03z\x1c\x1e\n\x0c\n\x05\x04\x04\x02\x0c\x08\x12\x03z\x1f,\n\r\n\x06\x04\x04\x02\x0c\x08\x02\x12\x03z +')

protox.define_fields(
    PrimitiveValues,
    i32=protox.Int32(
        number=1, required=True
    ),
    u32=protox.UInt32(
        number=2, required=True
    ),
    i64=protox.Int64(
        number=3, required=True
    ),
    u64=protox.UInt64(
        number=4, required=True
    ),
    si32=protox.SInt32(
        number=5, required=True
    ),
    si64=protox.SInt64(
        number=6, required=True
    ),
    fi32=protox.Fixed32(
        number=7, required=True
    ),
    fi64=protox.Fixed64(
        number=8, required=True
    ),
    sfi32=protox.SFixed32(
        number=9, required=True
    ),
    sfi64=protox.SFixed64(
        number=10, required=True
    ),
    f32=protox.Float(
        number=11, required=True
    ),
    f64=protox.Double(
        number=12, required=True
    ),
    s=protox.String(
        number=13, required=True
    ),
    b=protox.Bytes(
        number=14, required=True
    ),
    boolean=protox.Bool(
        number=15, required=True
    ),
)
PrimitiveValues.DESCRIPTOR = protox.DescriptorProto.from_bytes(b'\n\x0fPrimitiveValues\x12\x10\n\x03i32\x18\x01 \x02(\x05R\x03i32\x12\x10\n\x03u32\x18\x02 \x02(\rR\x03u32\x12\x10\n\x03i64\x18\x03 \x02(\x03R\x03i64\x12\x10\n\x03u64\x18\x04 \x02(\x04R\x03u64\x12\x12\n\x04si32\x18\x05 \x02(\x11R\x04si32\x12\x12\n\x04si64\x18\x06 \x02(\x12R\x04si64\x12\x12\n\x04fi32\x18\x07 \x02(\x07R\x04fi32\x12\x12\n\x04fi64\x18\x08 \x02(\x06R\x04fi64\x12\x14\n\x05sfi32\x18\t \x02(\x0fR\x05sfi32\x12\x14\n\x05sfi64\x18\n \x02(\x10R\x05sfi64\x12\x10\n\x03f32\x18\x0b \x02(\x02R\x03f32\x12\x10\n\x03f64\x18\x0c \x02(\x01R\x03f64\x12\x0c\n\x01s\x18\r \x02(\tR\x01s\x12\x0c\n\x01b\x18\x0e \x02(\x0cR\x01b\x12\x18\n\x07boolean\x18\x0f \x02(\x08R\x07boolean')
PrimitiveValues.DESCRIPTOR.file_descriptor = FILE_DESCRIPTOR
PrimitiveValues.DESCRIPTOR.full_name = 'PrimitiveValues'

protox.define_fields(
    OptionalPrimitiveValues,
    i32=protox.Int32(
        number=1, required=False
    ),
    u32=protox.UInt32(
        number=2, required=False
    ),
    i64=protox.Int64(
        number=3, required=False
    ),
    u64=protox.UInt64(
        number=4, required=False
    ),
    si32=protox.SInt32(
        number=5, required=False
    ),
    si64=protox.SInt64(
        number=6, required=False
    ),
    fi32=protox.Fixed32(
        number=7, required=False
    ),
    fi64=protox.Fixed64(
        number=8, required=False
    ),
    sfi32=protox.SFixed32(
        number=9, required=False
    ),
    sfi64=protox.SFixed64(
        number=10, required=False
    ),
    f32=protox.Float(
        number=11, required=False
    ),
    f64=protox.Double(
        number=12, required=False
    ),
    s=protox.String(
        number=13, required=False
    ),
    b=protox.Bytes(
        number=14, required=False
    ),
    boolean=protox.Bool(
        number=15, required=False
    ),
)
OptionalPrimitiveValues.DESCRIPTOR = protox.DescriptorProto.from_bytes(b'\n\x17OptionalPrimitiveValues\x12\x10\n\x03i32\x18\x01 \x01(\x05R\x03i32\x12\x10\n\x03u32\x18\x02 \x01(\rR\x03u32\x12\x10\n\x03i64\x18\x03 \x01(\x03R\x03i64\x12\x10\n\x03u64\x18\x04 \x01(\x04R\x03u64\x12\x12\n\x04si32\x18\x05 \x01(\x11R\x04si32\x12\x12\n\x04si64\x18\x06 \x01(\x12R\x04si64\x12\x12\n\x04fi32\x18\x07 \x01(\x07R\x04fi32\x12\x12\n\x04fi64\x18\x08 \x01(\x06R\x04fi64\x12\x14\n\x05sfi32\x18\t \x01(\x0fR\x05sfi32\x12\x14\n\x05sfi64\x18\n \x01(\x10R\x05sfi64\x12\x10\n\x03f32\x18\x0b \x01(\x02R\x03f32\x12\x10\n\x03f64\x18\x0c \x01(\x01R\x03f64\x12\x0c\n\x01s\x18\r \x01(\tR\x01s\x12\x0c\n\x01b\x18\x0e \x01(\x0cR\x01b\x12\x18\n\x07boolean\x18\x0f \x01(\x08R\x07boolean')
OptionalPrimitiveValues.DESCRIPTOR.file_descriptor = FILE_DESCRIPTOR
OptionalPrimitiveValues.DESCRIPTOR.full_name = 'OptionalPrimitiveValues'

protox.define_fields(
    OptionalDefaultPrimitiveValues,
    i32=protox.Int32(
        number=1, default=0, required=False
    ),
    u32=protox.UInt32(
        number=2, default=0, required=False
    ),
    i64=protox.Int64(
        number=3, default=0, required=False
    ),
    u64=protox.UInt64(
        number=4, default=0, required=False
    ),
    si32=protox.SInt32(
        number=5, default=0, required=False
    ),
    si64=protox.SInt64(
        number=6, default=0, required=False
    ),
    fi32=protox.Fixed32(
        number=7, default=0, required=False
    ),
    fi64=protox.Fixed64(
        number=8, default=0, required=False
    ),
    sfi32=protox.SFixed32(
        number=9, default=0, required=False
    ),
    sfi64=protox.SFixed64(
        number=10, default=0, required=False
    ),
    f32=protox.Float(
        number=11, default=0, required=False
    ),
    f64=protox.Double(
        number=12, default=0, required=False
    ),
    s=protox.String(
        number=13, required=False
    ),
    b=protox.Bytes(
        number=14, required=False
    ),
    boolean=protox.Bool(
        number=15, default=False, required=False
    ),
)
OptionalDefaultPrimitiveValues.DESCRIPTOR = protox.DescriptorProto.from_bytes(b'\n\x1eOptionalDefaultPrimitiveValues\x12\x13\n\x03i32\x18\x01 \x01(\x05:\x010R\x03i32\x12\x13\n\x03u32\x18\x02 \x01(\r:\x010R\x03u32\x12\x13\n\x03i64\x18\x03 \x01(\x03:\x010R\x03i64\x12\x13\n\x03u64\x18\x04 \x01(\x04:\x010R\x03u64\x12\x15\n\x04si32\x18\x05 \x01(\x11:\x010R\x04si32\x12\x15\n\x04si64\x18\x06 \x01(\x12:\x010R\x04si64\x12\x15\n\x04fi32\x18\x07 \x01(\x07:\x010R\x04fi32\x12\x15\n\x04fi64\x18\x08 \x01(\x06:\x010R\x04fi64\x12\x17\n\x05sfi32\x18\t \x01(\x0f:\x010R\x05sfi32\x12\x17\n\x05sfi64\x18\n \x01(\x10:\x010R\x05sfi64\x12\x13\n\x03f32\x18\x0b \x01(\x02:\x010R\x03f32\x12\x13\n\x03f64\x18\x0c \x01(\x01:\x010R\x03f64\x12\x0e\n\x01s\x18\r \x01(\t:\x00R\x01s\x12\x0e\n\x01b\x18\x0e \x01(\x0c:\x00R\x01b\x12\x1f\n\x07boolean\x18\x0f \x01(\x08:\x05falseR\x07boolean')
OptionalDefaultPrimitiveValues.DESCRIPTOR.file_descriptor = FILE_DESCRIPTOR
OptionalDefaultPrimitiveValues.DESCRIPTOR.full_name = 'OptionalDefaultPrimitiveValues'

protox.define_fields(
    RepeatedPrimitiveValues,
    i32=protox.Int32.as_repeated(
        number=1
    ),
    u32=protox.UInt32.as_repeated(
        number=2
    ),
    i64=protox.Int64.as_repeated(
        number=3
    ),
    u64=protox.UInt64.as_repeated(
        number=4
    ),
    si32=protox.SInt32.as_repeated(
        number=5
    ),
    si64=protox.SInt64.as_repeated(
        number=6
    ),
    fi32=protox.Fixed32.as_repeated(
        number=7
    ),
    fi64=protox.Fixed64.as_repeated(
        number=8
    ),
    sfi32=protox.SFixed32.as_repeated(
        number=9
    ),
    sfi64=protox.SFixed64.as_repeated(
        number=10
    ),
    f32=protox.Float.as_repeated(
        number=11
    ),
    f64=protox.Double.as_repeated(
        number=12
    ),
    s=protox.String.as_repeated(
        number=13
    ),
    b=protox.Bytes.as_repeated(
        number=14
    ),
    boolean=protox.Bool.as_repeated(
        number=15
    ),
)
RepeatedPrimitiveValues.DESCRIPTOR = protox.DescriptorProto.from_bytes(b'\n\x17RepeatedPrimitiveValues\x12\x10\n\x03i32\x18\x01 \x03(\x05R\x03i32\x12\x10\n\x03u32\x18\x02 \x03(\rR\x03u32\x12\x10\n\x03i64\x18\x03 \x03(\x03R\x03i64\x12\x10\n\x03u64\x18\x04 \x03(\x04R\x03u64\x12\x12\n\x04si32\x18\x05 \x03(\x11R\x04si32\x12\x12\n\x04si64\x18\x06 \x03(\x12R\x04si64\x12\x12\n\x04fi32\x18\x07 \x03(\x07R\x04fi32\x12\x12\n\x04fi64\x18\x08 \x03(\x06R\x04fi64\x12\x14\n\x05sfi32\x18\t \x03(\x0fR\x05sfi32\x12\x14\n\x05sfi64\x18\n \x03(\x10R\x05sfi64\x12\x10\n\x03f32\x18\x0b \x03(\x02R\x03f32\x12\x10\n\x03f64\x18\x0c \x03(\x01R\x03f64\x12\x0c\n\x01s\x18\r \x03(\tR\x01s\x12\x0c\n\x01b\x18\x0e \x03(\x0cR\x01b\x12\x18\n\x07boolean\x18\x0f \x03(\x08R\x07boolean')
RepeatedPrimitiveValues.DESCRIPTOR.file_descriptor = FILE_DESCRIPTOR
RepeatedPrimitiveValues.DESCRIPTOR.full_name = 'RepeatedPrimitiveValues'

protox.define_fields(
    RepeatedPackedPrimitiveValues,
    i32=protox.Int32.as_repeated(
        number=1, packed=True
    ),
    u32=protox.UInt32.as_repeated(
        number=2, packed=True
    ),
    i64=protox.Int64.as_repeated(
        number=3, packed=True
    ),
    u64=protox.UInt64.as_repeated(
        number=4, packed=True
    ),
    si32=protox.SInt32.as_repeated(
        number=5, packed=True
    ),
    si64=protox.SInt64.as_repeated(
        number=6, packed=True
    ),
    fi32=protox.Fixed32.as_repeated(
        number=7, packed=True
    ),
    fi64=protox.Fixed64.as_repeated(
        number=8, packed=True
    ),
    sfi32=protox.SFixed32.as_repeated(
        number=9, packed=True
    ),
    sfi64=protox.SFixed64.as_repeated(
        number=10, packed=True
    ),
    f32=protox.Float.as_repeated(
        number=11, packed=True
    ),
    f64=protox.Double.as_repeated(
        number=12, packed=True
    ),
    boolean=protox.Bool.as_repeated(
        number=13, packed=True
    ),
)
RepeatedPackedPrimitiveValues.DESCRIPTOR = protox.DescriptorProto.from_bytes(b'\n\x1dRepeatedPackedPrimitiveValues\x12\x1e\n\x03i32\x18\x01 \x03(\x05R\x03i32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12\x1e\n\x03u32\x18\x02 \x03(\rR\x03u32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12\x1e\n\x03i64\x18\x03 \x03(\x03R\x03i64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12\x1e\n\x03u64\x18\x04 \x03(\x04R\x03u64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12 \n\x04si32\x18\x05 \x03(\x11R\x04si32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12 \n\x04si64\x18\x06 \x03(\x12R\x04si64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12 \n\x04fi32\x18\x07 \x03(\x07R\x04fi32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12 \n\x04fi64\x18\x08 \x03(\x06R\x04fi64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12"\n\x05sfi32\x18\t \x03(\x0fR\x05sfi32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12"\n\x05sfi64\x18\n \x03(\x10R\x05sfi64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12\x1e\n\x03f32\x18\x0b \x03(\x02R\x03f32B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12\x1e\n\x03f64\x18\x0c \x03(\x01R\x03f64B\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00\x12&\n\x07boolean\x18\r \x03(\x08R\x07booleanB\x0c\x08\x00\x10\x010\x00(\x00\x18\x00P\x00')
RepeatedPackedPrimitiveValues.DESCRIPTOR.file_descriptor = FILE_DESCRIPTOR
RepeatedPackedPrimitiveValues.DESCRIPTOR.full_name = 'RepeatedPackedPrimitiveValues'
