# Generated by protox. DO NOT EDIT!
# source: service.proto
import abc
import typing

import grpclib.client
import grpclib.const
import grpclib.server

import app.protobuf.service.ping_pb as \
    service__ping_pb


class MyServiceBase(abc.ABC):
    @abc.abstractmethod
    async def ping(self, stream: grpclib.server.Stream):
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/MyService/Ping': grpclib.const.Handler(
                self.ping,
                grpclib.const.Cardinality.UNARY_UNARY,
                service__ping_pb.PingRequest,
                service__ping_pb.PingResponse,
            ),
        }


class MyServiceStub:
    def __init__(self, channel: grpclib.client.Channel):
        self.ping = grpclib.client.UnaryUnaryMethod(
            channel,
            '/MyService/Ping',
            service__ping_pb.PingRequest,
            service__ping_pb.PingResponse,
        )
